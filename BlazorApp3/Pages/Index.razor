@page "/"
@using BlazorApp3.Data
@inject BlazorApp3.IService.IStudentService studentService
@using BlazorApp3.PageClass

<div class="container mt-4">
    <div class="row">
        
        <div class="col-md-12">
            <h3 class="text-center mb-3">Student List</h3>
            <table class="table table-hover table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Student ID</th>
                        <th>Name</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Students.Count > 0)
                    {
                        @foreach (var stu in Students)
                        {
                            <tr>
                                <td>@stu.Id</td>
                                <td>@stu.Name</td>
                                <td>
                                    <button class="btn btn-sm btn-info" @onclick="() => Edit(stu.Id)">
                                        <i class="bi bi-pencil-square"></i> Details
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center text-muted">No students available.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row mt-5">
        
        <div class="col-md-8 mx-auto">
            <h4 class="text-center">Add or Update Student</h4>
            <form>
                <div class="mb-3">
                    <label for="studentName" class="form-label">Name:</label>
                    <input id="studentName" @bind="Student.Name" type="text" class="form-control" placeholder="Enter student name" />
                </div>
                <div class="mb-3">
                    <label for="studentPhoto" class="form-label">Photo:</label>
                    <BlazorInputFile.InputFile OnChange="HandleFileSelection" class="form-control" />
                </div>
                <div class="text-center">
                    @if (!string.IsNullOrEmpty(imgSrc))
                    {
                        <img src="@imgSrc" class="img-thumbnail" width="200" height="200" />
                    }
                    else
                    {
                        <p class="text-muted">No photo selected</p>
                    }
                </div>
                <div class="text-center mt-4">
                    <button type="button" @onclick="SaveStudent" class="btn btn-success btn-lg">
                        <i class="bi bi-save"></i> Save
                    </button>
                </div>
            </form>
            <div class="mt-3 text-center">
                <span class="fw-bold text-success">@Message</span>
            </div>
        </div>
    </div>
</div>

@code {
    string imgSrc = "";
    string Message = "";
    IFileListEntry? file = null;
    byte[]? _fileBytes = null;
    Student Student = new Student();
    List<Student> Students = new List<Student>();

    protected override async Task OnInitializedAsync()
    {
        GetStudents();
    }

    private void GetStudents()
    {
        Students = studentService.GetStudents();
    }

    public async Task HandleFileSelection(IFileListEntry[] files)
    {
       
        if (files.Length > 0)
        {
            IFileListEntry? file = files.FirstOrDefault();
            
            using (var memoryStream = new MemoryStream())
            {
                await file.Data.CopyToAsync(memoryStream);
                _fileBytes = memoryStream.ToArray();

                StudentPage studentPage = new StudentPage(studentService);
                var photo = studentPage.GetImage(Convert.ToBase64String(_fileBytes));

                imgSrc = $"data:image/jpg;base64,{Convert.ToBase64String(photo)}";
            }
        }
    }

    public void SaveStudent()
    {
        StudentPage studentPage = new StudentPage(studentService);
        Message = studentPage.SaveInformation(_fileBytes, Student);

        Student = new Student();
        //imgSrc = "";
        GetStudents();
    }

    private void Edit(string studentId)
    {
        StudentPage studentPage = new StudentPage(studentService);
        Student = studentPage.GetStudent(studentId);
       // imgSrc = Student.ImageUrl;
        Message = "";
    }
}
